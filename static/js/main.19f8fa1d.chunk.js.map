{"version":3,"sources":["common/useLocalStorage.ts","common/static.ts","components/SelectFromListScreen/useStyles.ts","components/SelectFromListScreen/index.ts","components/SelectFromListScreen/SelectFromListScreen.tsx","pages/CreatePetPage/ConfirmationStep/index.ts","pages/CreatePetPage/ConfirmationStep/ConfirmationStep.tsx","pages/CreatePetPage/NamePicker/index.ts","pages/CreatePetPage/NamePicker/NamePicker.tsx","pages/CreatePetPage/PetSelector/index.ts","pages/CreatePetPage/PetSelector/PetSelector.tsx","pages/CreatePetPage/SpeciesSelector/index.ts","pages/CreatePetPage/SpeciesSelector/SpeciesSelector.tsx","common/theme.ts","pages/CreatePetPage/useStyles.ts","pages/CreatePetPage/index.ts","pages/CreatePetPage/CreatePetPage.tsx","pages/MyPetsPage/PetActions/Cony/ConyEating2.gif","pages/MyPetsPage/PetActions/Cony/conyGivePresent.gif","pages/MyPetsPage/PetActions/Cony/conyGiveLove.gif","pages/MyPetsPage/PetActions/PetAvatar/useStyles.ts","pages/MyPetsPage/PetActions/PetAvatar/index.ts","pages/MyPetsPage/PetActions/PetAvatar/PetAvatar.tsx","pages/MyPetsPage/PetActions/actions.tsx","pages/MyPetsPage/PetActions/DraggableItems/useStyles.ts","pages/MyPetsPage/PetActions/DraggableItems/DraggableImage.js","pages/MyPetsPage/useStyles.ts","pages/MyPetsPage/index.ts","pages/MyPetsPage/MyPetsPage.tsx","components/BottomNav/useStyles.ts","components/BottomNav/BottomNav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","DOG_URL","CAT_URL","BIRD_URL","useStyles","makeStyles","container","display","alignItems","justifyContent","flexDirection","padding","petButton","margin","height","petButtons","position","bottom","marginLeft","marginRight","petImage","header","marginBottom","backButton","left","top","imageContainer","SelectFromListScreen","title","items","imageUrl","onItemSelected","onBackButtonClick","classes","className","IconButton","onClick","size","ArrowBack","Typography","variant","align","src","alt","map","Button","color","fullWidth","ConfirmationStep","pet","specie","name","onConfirm","NamePicker","onNameSelected","PetSelector","onPetSelected","SpeciesSelector","onSpecieSelected","theme","createMuiTheme","spacing","width","CreatePetPage","phase","setPhase","setPet","setSpecie","setName","petType","newSpecie","newName","location","href","PetAvatar","style","actions","draggableImageUrl","initialComponent","completedComponent","ConyEating","actionCompletedMessage","actionCompletedHint","actionRequestHint","actionRequestMessage","ConyGivePresent","ConyGiveLove","getRandomAction","Math","floor","random","length","borderRadius","whiteSpace","backgroundImage","backgroundSize","headerContainer","DraggableImage","onRelease","useSpring","xy","set","bind","useGesture","down","delta","velocity","clamp","config","mass","tension","friction","div","transform","interpolate","x","y","touchAction","imgContainer","MyPetsPage","animated","action","setAction","completed","setCompleted","setTimeout","root","BottomNav","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","Pets","BarChart","Settings","App","useWindowHeight","NoSsr","backgroundRepeat","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19f8fa1d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","export const DOG_URL =\n  \"https://images.vexels.com/media/users/3/160071/isolated/lists/8a4c9b162a4495af9185c91a57b6334f-cute-dog-puppy-tail-ear-tongue-flat.png\";\nexport const CAT_URL =\n  \"https://static.skillshare.com/uploads/project/230282/cover_800_03d7d5fe52fdd0534e36d67dcc2dd786.png\";\n// export const BIRD_URL =\n//   \"https://banner2.cleanpng.com/20180115/ype/guitar-cartoon-pics-5a5ca3a499a389.01332664151602064462937593.jpg\";\nexport const BIRD_URL =\n  \"https://i.pinimg.com/originals/5f/31/3d/5f313d0b5de732357b911012185d110b.png\";\n\nexport const CUTE_PETS =\n  \"https://i.pinimg.com/originals/97/ac/45/97ac45eac6b2225b934ce8d9ab00a56d.png\";\n\nexport const BACKGROUND_URL =\n  \"https://lh3.googleusercontent.com/proxy/AX2SPHgc9_NRgrrLUWlLGCK9VTuNeAUaGxC0k1M1IRPNFtoERwOqo_1Jutuk1ZSrSYgOm2gD6l2bTtv-P04JbWqfyO51D76AZVco0Md5ih3cV6tZVIn4Pg9SkDxDArcqZ8usnLHDLsmjaoH3SRDXNk4Z4BlfDIY1jS8\";\n\nexport const ICE_CREAM_CONE_URL =\n  \"https://images.vexels.com/media/users/3/151649/isolated/preview/058d4939c563ec3ec4c093f949aecb1c-cone-ice-cream-cartoon-by-vexels.png\";\n\nexport const CONY_HUNGRY_URL =\n  \"https://i.pinimg.com/originals/8c/87/aa/8c87aa23ff8a6c938da6e4ade979690c.png\";\n\nexport const PRESENT_IMG_URL =\n  \"https://www.industrialheating.com/ext/resources/images/Heat-Treated-Gifts/secretlondon-red-present-300px.png\";\n\nexport const CONY_ASKING_FOR_PRESENT_URL =\n  \"https://thumbs.gfycat.com/WarpedZigzagIchthyosaurs-size_restricted.gif\";\n\nexport const HEART_URL = \"https://img.icons8.com/cotton/2x/like.png\";\n\nexport const CONY_NEEDS_A_HUG_URL =\n  \"https://www.jing.fm/clipimg/full/128-1287237_sweet-drawing-love-brown-and-cony-love.png\";\n","import { makeStyles } from \"@material-ui/core\";\nimport theme from \"../../common/theme\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    padding: 34,\n  },\n\n  petButton: {\n    margin: \"8px 0px\",\n    height: 64,\n  },\n\n  petButtons: {\n    position: \"fixed\",\n    bottom: 80,\n    marginLeft: 16,\n    marginRight: 16,\n  },\n\n  petImage: {\n    height: 150,\n  },\n\n  header: {\n    display: \"flex\",\n    marginBottom: 40,\n  },\n  backButton: {\n    position: \"fixed\",\n    left: \"8px\",\n    top: \"16px\",\n  },\n\n  imageContainer: {},\n});\n\nexport default useStyles;\n","import SelectFromListScreen from \"./SelectFromListScreen\";\n\nexport default SelectFromListScreen;\n","import { Button, IconButton, Typography } from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { BACKGROUND_URL } from \"../../common/static\";\nimport useStyles from \"./useStyles\";\n\ninterface Props {\n  title: string;\n  items: Array<string>;\n  imageUrl?: string;\n  onItemSelected: (itemClicked: string) => void;\n  onBackButtonClick?: () => void;\n}\n\nconst SelectFromListScreen: React.FC<Props> = ({\n  title,\n  items,\n  imageUrl,\n  onItemSelected,\n  onBackButtonClick,\n}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.backButton}>\n        {onBackButtonClick && (\n          <IconButton onClick={onBackButtonClick} size=\"small\">\n            <ArrowBack></ArrowBack>\n          </IconButton>\n        )}\n      </div>\n\n      <div className={classes.header}>\n        <Typography variant=\"h4\" align=\"center\">\n          {title}\n        </Typography>\n      </div>\n      <div className={classes.imageContainer}>\n        <img src={imageUrl} alt=\"a cute pet\" className={classes.petImage} />\n      </div>\n      <div className={classes.petButtons}>\n        {items.map((item) => (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            className={classes.petButton}\n            onClick={() => {\n              onItemSelected(item);\n            }}\n          >\n            {item}\n          </Button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SelectFromListScreen;\n","import ConfirmationStep from \"./ConfirmationStep\";\n\nexport default ConfirmationStep;\n","import React from \"react\";\nimport { CAT_URL, DOG_URL, BIRD_URL } from \"../../../common/static\";\nimport SelectFromListScreen from \"../../../components/SelectFromListScreen\";\nimport { Pet } from \"../CreatePetPage\";\n\ninterface Props {\n  pet: Pet;\n  specie: string;\n  name: string;\n  onConfirm: () => void;\n  onBackButtonClick: () => void;\n}\n\nconst ConfirmationStep: React.FC<Props> = ({\n  pet,\n  specie,\n  name,\n  onConfirm,\n  onBackButtonClick,\n}) => {\n  const getImageUrl = () => {\n    if (pet === \"Cat\") {\n      return CAT_URL;\n    }\n\n    if (pet === \"Dog\") {\n      return DOG_URL;\n    }\n\n    return BIRD_URL;\n  };\n\n  return (\n    <SelectFromListScreen\n      title={`Ready to meet ${name}, your new ${specie} ${pet}?`}\n      items={[`Meet ${name}`]}\n      imageUrl={getImageUrl()}\n      onItemSelected={onConfirm}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n\nexport default ConfirmationStep;\n","import NamePicker from \"./NamePicker\";\n\nexport default NamePicker;\n","import { Button, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { BIRD_URL, CAT_URL, DOG_URL } from \"../../../common/static\";\nimport SelectFromListScreen from \"../../../components/SelectFromListScreen\";\nimport { Pet } from \"../CreatePetPage\";\n\ninterface Props {\n  onNameSelected: (name: string) => void;\n  onBackButtonClick: () => void;\n  pet: Pet;\n}\n\nconst NamePicker: React.FC<Props> = ({\n  onNameSelected,\n  onBackButtonClick,\n  pet,\n}) => {\n  const getImageUrl = () => {\n    if (pet === \"Cat\") {\n      return CAT_URL;\n    }\n\n    if (pet === \"Dog\") {\n      return DOG_URL;\n    }\n\n    return BIRD_URL;\n  };\n  return (\n    <SelectFromListScreen\n      title=\"Pick Your Pets Name!\"\n      items={[\"Joan\", \"Frederick\", \"Mittens\", \"Paws\", \"Enter Your Own Name\"]}\n      imageUrl={getImageUrl()}\n      onItemSelected={onNameSelected}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n\nexport default NamePicker;\n","import PetSelector from \"./PetSelector\";\n\nexport default PetSelector;\n","import { Button, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { CUTE_PETS } from \"../../../common/static\";\nimport SelectFromListScreen from \"../../../components/SelectFromListScreen\";\nimport { Pet } from \"../CreatePetPage\";\n\ninterface Props {\n  onPetSelected: (pet: Pet) => void;\n}\n\nconst PetSelector: React.FC<Props> = ({ onPetSelected }) => {\n  return (\n    <SelectFromListScreen\n      title=\"Pick Your Pet!\"\n      items={[\"Cat\", \"Dog\", \"Bird\"]}\n      imageUrl={CUTE_PETS}\n      onItemSelected={onPetSelected as any}\n    />\n  );\n};\n\nexport default PetSelector;\n","import SpeciesSelector from \"./SpeciesSelector\";\n\nexport default SpeciesSelector;\n","import { Button, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { CAT_URL, DOG_URL, BIRD_URL } from \"../../../common/static\";\nimport SelectFromListScreen from \"../../../components/SelectFromListScreen\";\nimport { Pet } from \"../CreatePetPage\";\n\ninterface Props {\n  onSpecieSelected: (specie: string) => void;\n  onBackButtonClick: () => void;\n  pet: Pet;\n}\n\nconst SpeciesSelector: React.FC<Props> = ({\n  onSpecieSelected,\n  onBackButtonClick,\n  pet,\n}) => {\n  const getPetSpecieOptions = (): Array<string> => {\n    if (pet === \"Cat\") {\n      return [\"Siamese\", \"Benghal\", \"Calico\", \"Sphinx\"];\n    }\n\n    if (pet === \"Dog\") {\n      return [\"Hound\", \"Golden Retriever\", \"Husky\", \"Poodle\"];\n    }\n\n    return [\"Parrot\", \"Parrakeet\", \"Dove\"];\n  };\n\n  const getImageUrl = () => {\n    if (pet === \"Cat\") {\n      return CAT_URL;\n    }\n\n    if (pet === \"Dog\") {\n      return DOG_URL;\n    }\n\n    return BIRD_URL;\n  };\n\n  return (\n    <SelectFromListScreen\n      title={`Select your ${pet}'s species:`}\n      items={getPetSpecieOptions()}\n      imageUrl={getImageUrl()}\n      onItemSelected={onSpecieSelected}\n      onBackButtonClick={onBackButtonClick}\n    />\n  );\n};\n\nexport default SpeciesSelector;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({});\n\nexport default theme;\n","import { makeStyles } from \"@material-ui/core\";\nimport theme from \"../../common/theme\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n\n  petButton: {\n    margin: \"8px 0px\",\n    height: 64,\n  },\n\n  petButtons: {\n    position: \"fixed\",\n    bottom: 24,\n    width: \"calc(100%-32px)\",\n  },\n});\n\nexport default useStyles;\n","import CreatePetPage from \"./CreatePetPage\";\n\nexport default CreatePetPage;\n","import React, { useState } from \"react\";\nimport useLocalStorage from \"../../common/useLocalStorage\";\nimport ConfirmationStep from \"./ConfirmationStep\";\nimport NamePicker from \"./NamePicker\";\nimport PetSelector from \"./PetSelector\";\nimport SpeciesSelector from \"./SpeciesSelector\";\nimport useStyles from \"./useStyles\";\n\ntype Phase = \"petSelect\" | \"speciesSelect\" | \"naming\" | \"completed\";\nexport type Pet = \"Dog\" | \"Cat\" | \"Bird\";\n\nconst CreatePetPage: React.FC = () => {\n  const classes = useStyles();\n  const [phase, setPhase] = useState<Phase>(\"petSelect\");\n  const [pet, setPet] = useLocalStorage<Pet>(\"pet\", \"Dog\");\n  const [specie, setSpecie] = useLocalStorage<string>(\"specie\", \"\");\n  const [name, setName] = useLocalStorage<string>(\"name\", \"\");\n\n  const onPetSelected = (petType: Pet) => {\n    setPet(petType);\n    setPhase(\"speciesSelect\");\n  };\n\n  const onSpeciesSelected = (newSpecie: string) => {\n    setSpecie(newSpecie);\n    setPhase(\"naming\");\n  };\n\n  const onNamePicked = (newName: string) => {\n    setName(newName);\n    setPhase(\"completed\");\n  };\n\n  const onConfirm = () => {\n    window.location.href = \"../dashboard\";\n  };\n\n  return (\n    <>\n      {phase === \"petSelect\" && <PetSelector onPetSelected={onPetSelected} />}\n      {phase === \"speciesSelect\" && (\n        <SpeciesSelector\n          pet={pet}\n          onSpecieSelected={onSpeciesSelected}\n          onBackButtonClick={() => {\n            setPhase(\"petSelect\");\n          }}\n        />\n      )}\n      {phase === \"naming\" && (\n        <NamePicker\n          pet={pet}\n          onNameSelected={onNamePicked}\n          onBackButtonClick={() => {\n            setPhase(\"speciesSelect\");\n          }}\n        />\n      )}\n\n      {phase === \"completed\" && (\n        <ConfirmationStep\n          pet={pet}\n          name={name as any}\n          specie={specie as any}\n          onBackButtonClick={() => {\n            setPhase(\"naming\");\n          }}\n          onConfirm={onConfirm}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CreatePetPage;\n","export default __webpack_public_path__ + \"static/media/ConyEating2.9a2846a6.gif\";","export default __webpack_public_path__ + \"static/media/conyGivePresent.d8143888.gif\";","export default __webpack_public_path__ + \"static/media/conyGiveLove.36e1f916.gif\";","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 200,\n    width: 200,\n  },\n});\n\nexport default useStyles;\n","import PetAvatar from \"./PetAvatar\";\n\nexport default PetAvatar;\n","import React from \"react\";\nimport useStyles from \"./useStyles\";\n\ninterface Props {\n  imageUrl: string;\n  width?: number;\n  height?: number;\n}\n\nconst PetAvatar: React.FC<Props> = ({\n  imageUrl,\n  width = 200,\n  height = 200,\n}) => {\n  const classes = useStyles();\n  return (\n    <img\n      src={imageUrl}\n      alt=\"a cute pet\"\n      className={classes.container}\n      style={{ width, height }}\n    />\n  );\n};\n\nexport default PetAvatar;\n","import React from \"react\";\nimport {\n  CONY_ASKING_FOR_PRESENT_URL,\n  CONY_HUNGRY_URL,\n  CONY_NEEDS_A_HUG_URL,\n  HEART_URL,\n  ICE_CREAM_CONE_URL,\n  PRESENT_IMG_URL,\n} from \"../../../common/static\";\nimport ConyEating from \"./Cony/ConyEating2.gif\";\nimport ConyGivePresent from \"./Cony/conyGivePresent.gif\";\nimport ConyGiveLove from \"./Cony/conyGiveLove.gif\";\n\nimport PetAvatar from \"./PetAvatar\";\n\nexport interface PetAction {\n  draggableImageUrl: string;\n  initialComponent: React.ReactNode;\n  completedComponent: React.ReactNode;\n  actionRequestMessage: string;\n  actionRequestHint: string;\n  actionCompletedMessage: string;\n  actionCompletedHint: string;\n}\n\nconst actions = [\n  {\n    draggableImageUrl: ICE_CREAM_CONE_URL,\n    initialComponent: <PetAvatar imageUrl={CONY_HUNGRY_URL} />,\n    completedComponent: <PetAvatar imageUrl={ConyEating} />,\n    actionCompletedMessage: \"Yummy yummy in my tummy\",\n    actionCompletedHint: \"Thank you for the snackity snack\",\n    actionRequestHint: \"Drag the ice cream to my mouth to feed me!\",\n    actionRequestMessage: \"Feed me, I'm hungry!!\",\n  },\n  {\n    draggableImageUrl: PRESENT_IMG_URL,\n    initialComponent: <PetAvatar imageUrl={CONY_ASKING_FOR_PRESENT_URL} />,\n    completedComponent: <PetAvatar imageUrl={ConyGivePresent} />,\n    actionCompletedMessage: \"YAYYYYYYY\",\n    actionCompletedHint: \"Thank you for this awesome surprise gift!!\",\n    actionRequestHint: \"Drag the gift into my hands to give me a surprise\",\n    actionRequestMessage: \"Can I have a present?\",\n  },\n  {\n    draggableImageUrl: HEART_URL,\n    initialComponent: <PetAvatar imageUrl={CONY_NEEDS_A_HUG_URL} />,\n    completedComponent: <PetAvatar imageUrl={ConyGiveLove} />,\n    actionCompletedMessage: \"Awww thanks I feel better now!!\",\n    actionCompletedHint:\n      \"I really needed that hug, thank you, I appreciate you\",\n    actionRequestHint: \"Drag the heart to me to hug me\",\n    actionRequestMessage: \"I just got dumped can you give me a hug?\",\n  },\n];\n\nexport const getRandomAction = (): PetAction => {\n  return actions[Math.floor(Math.random() * actions.length)];\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = (draggableImageUrl: string) => {\n  return makeStyles({\n    container: {\n      width: 100,\n      height: 100,\n      borderRadius: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: \"white\",\n      whiteSpace: \"pre\",\n      backgroundImage: `url(${draggableImageUrl});`,\n      backgroundSize: \"cover\",\n    },\n    headerContainer: {},\n  });\n};\n\nexport default useStyles;\n","import React from \"react\";\nimport clamp from \"lodash-es/clamp\";\nimport { useSpring, animated } from \"react-spring\";\nimport { useGesture } from \"react-with-gesture\";\nimport useStyles from \"./useStyles\";\n\n\nfunction DraggableImage({ imageUrl, onRelease }) {\n  const classes = useStyles(imageUrl)();\n  console.log(classes)\n  const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }));\n  const bind = useGesture(({ down, delta, velocity }) => {\n    velocity = clamp(velocity, 1, 8);\n    set({\n      xy: down ? delta : [0, 0],\n\n      config: { mass: velocity, tension: 500 * velocity, friction: 50 },\n    });\n\n    if(!down){\n      onRelease()\n    }\n  });\n  return (\n    <animated.div\n      {...bind()}\n      className={classes.container}\n      style={{\n        transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`),\n        touchAction: 'none'\n      }}\n    />\n  );\n}\n\nexport default DraggableImage;\n","import { makeStyles } from \"@material-ui/core\";\nimport theme from \"../../common/theme\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    padding: 34,\n  },\n  imgContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 400,\n    flexDirection: \"column\",\n  },\n  headerContainer: {},\n});\n\nexport default useStyles;\n","import MyPetsPage from \"./MyPetsPage\";\n\nexport default MyPetsPage;\n","import { Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { animated } from \"react-spring\";\nimport { ICE_CREAM_CONE_URL } from \"../../common/static\";\nimport { getRandomAction, PetAction } from \"./PetActions/actions\";\nimport { ConyEating } from \"./PetActions/Cony\";\nimport DraggableImage from \"./PetActions/DraggableItems/DraggableImage\";\nimport useStyles from \"./useStyles\";\n\nconst TIME_BETWEEN_ACTIONS_IN_MS = 5000;\n\nconst MyPetsPage: React.FC = () => {\n  const classes = useStyles();\n  const [action, setAction] = useState<PetAction>(getRandomAction());\n  const [completed, setCompleted] = useState(false);\n\n  const onDraggableRelease = () => {\n    setCompleted(true);\n    setTimeout(() => {\n      setCompleted(false);\n      setAction(getRandomAction());\n    }, TIME_BETWEEN_ACTIONS_IN_MS);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.headerContainer}>\n        <Typography variant=\"h4\" align=\"center\">\n          {completed\n            ? action.actionCompletedMessage\n            : action.actionRequestMessage}\n        </Typography>\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n          {completed ? action.actionCompletedHint : action.actionRequestHint}\n        </Typography>\n      </div>\n      <div className={classes.imgContainer}>\n        {completed && action.completedComponent}\n        {!completed && action.initialComponent}\n\n        {!completed && (\n          <DraggableImage\n            imageUrl={action.draggableImageUrl}\n            onRelease={onDraggableRelease}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default animated(MyPetsPage);\n","import { makeStyles } from \"@material-ui/core\";\nimport theme from \"../../common/theme\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\n\nexport default useStyles;\n","import { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport { BarChart, Pets, Settings } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./useStyles\";\n\nconst BottomNav: React.FC = () => {\n  const [value, setValue] = useState();\n  const classes = useStyles();\n\n  const onItemClicked = (event: any, newValue: string) => {\n    window.location.href = `../${newValue}`;\n  };\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={onItemClicked}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        label=\"My Pets\"\n        value=\"dashboard\"\n        icon={<Pets />}\n      />\n      <BottomNavigationAction\n        label=\"Statistics\"\n        value=\"stats\"\n        icon={<BarChart />}\n      />\n      <BottomNavigationAction\n        label=\"Settings\"\n        value=\"create\"\n        icon={<Settings />}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default BottomNav;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CreatePetPage from \"./pages/CreatePetPage\";\nimport { NoSsr, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./common/theme\";\nimport { BACKGROUND_URL } from \"./common/static\";\nimport { useWindowHeight } from \"@react-hook/window-size\";\nimport { Route, BrowserRouter as Router, Link, Switch } from \"react-router-dom\";\nimport MyPetsPage from \"./pages/MyPetsPage\";\nimport BottomNav from \"./components/BottomNav/BottomNav\";\n\nfunction App() {\n  const height = useWindowHeight();\n  return (\n    // <ThemeProvider theme={theme} >\n    <NoSsr>\n      <div\n        style={{\n          backgroundImage: `url(${BACKGROUND_URL})`,\n          backgroundRepeat: \"repeat\",\n          height: height - 56,\n        }}\n      >\n        <Router>\n          <div>\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/create\">\n                <CreatePetPage />\n              </Route>\n              <Route path=\"/dashboard\">\n                <MyPetsPage />\n              </Route>\n              <Route path=\"/\">\n                <CreatePetPage />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n      <BottomNav />\n    </NoSsr>\n\n    // </ThemeProvider>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.tsx</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}